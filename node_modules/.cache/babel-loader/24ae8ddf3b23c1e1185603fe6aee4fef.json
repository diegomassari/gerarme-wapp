{"ast":null,"code":"var _jsxFileName = \"/Users/massari/Code/gerarme-wapp/src/components/configs/FormLogo.js\";\nimport React from 'react';\nimport { getUser } from \"../../services/auth\";\nimport api from \"../../services/api\";\nimport ReactCrop from \"react-image-crop\";\nimport FormLogoImageCrop from \"./FormLogoImageCrop\";\n\nclass FormLogo extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            logoFile = _this$state.logoFile,\n            userId = _this$state.userId;\n      console.log(this.state);\n\n      if (!logoFile || !userId) {\n        this.setState({\n          error: \"Suba sua imagem de Logo para salvar\"\n        });\n      } else {\n        try {\n          const response = await api.post(\"/auth//api/users/logo\", {\n            logoFile,\n            userId\n          });\n          console.log(response); //login(responseLogin.data.access_token)\n          //this.props.history.push(\"/\")\n        } catch (err) {\n          this.setState({\n            error: \"Houve um problema com o login, verifique suas credenciais. T.T\"\n          });\n        }\n      }\n    };\n\n    this.handleOnCrop = () => {\n      this.setState({\n        crop\n      });\n    };\n\n    this.state = {\n      logoFile: null,\n      userId: null,\n      src: null,\n      crop: {\n        unit: \"%\",\n        width: 100,\n        aspect: 16 / 7\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      userId: getUser()\n    });\n  }\n\n  handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value,\n          type = _event$target.type,\n          checked = _event$target.checked;\n    type === \"checkbox\" ? this.setState({\n      [name]: checked\n    }) : this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          crop = _this$state2.crop,\n          logoFile = _this$state2.logoFile,\n          src = _this$state2.src;\n    return React.createElement(\"div\", {\n      className: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"panel-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Logo\")), React.createElement(\"div\", {\n      className: \"panel-body container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.onSelectFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"CropComponent\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, src && React.createElement(ReactCrop, {\n      src: src,\n      crop: crop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), logoFile && React.createElement(\"img\", {\n      alt: \"Crop\",\n      name: \"logoFile\",\n      id: \"logoFile\",\n      src: logoFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success mt-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Salvar\"))));\n  }\n\n}\n\nexport default FormLogo;","map":{"version":3,"sources":["/Users/massari/Code/gerarme-wapp/src/components/configs/FormLogo.js"],"names":["React","getUser","api","ReactCrop","FormLogoImageCrop","FormLogo","Component","constructor","handleSubmit","e","preventDefault","state","logoFile","userId","console","log","setState","error","response","post","err","handleOnCrop","crop","src","unit","width","aspect","handleChange","bind","componentDidMount","event","target","name","value","type","checked","render","onSelectFile"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,GAAE;AACT;;AADS,SAwBbC,YAxBa,GAwBE,MAAMC,CAAN,IAAW;AAEtBA,MAAAA,CAAC,CAACC,cAAF;AAFsB,0BAGO,KAAKC,KAHZ;AAAA,YAGdC,QAHc,eAGdA,QAHc;AAAA,YAGJC,MAHI,eAGJA,MAHI;AAKtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;;AAEA,UAAI,CAACC,QAAD,IAAa,CAACC,MAAlB,EAA0B;AACtB,aAAKG,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAd;AACH,OAFD,MAEO;AACH,YAAI;AACA,gBAAMC,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,IAAJ,CAAS,uBAAT,EAAkC;AAAEP,YAAAA,QAAF;AAAYC,YAAAA;AAAZ,WAAlC,CAAvB;AAEAC,UAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ,EAHA,CAKA;AACA;AAEH,SARD,CAQE,OAAOE,GAAP,EAAY;AACV,eAAKJ,QAAL,CAAc;AACdC,YAAAA,KAAK,EACD;AAFU,WAAd;AAIH;AACJ;AAEJ,KAlDY;;AAAA,SAqDbI,YArDa,GAqDE,MAAM;AACjB,WAAKL,QAAL,CAAc;AAACM,QAAAA;AAAD,OAAd;AACH,KAvDY;;AAET,SAAKX,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,IADD;AAETC,MAAAA,MAAM,EAAE,IAFC;AAGTU,MAAAA,GAAG,EAAE,IAHI;AAITD,MAAAA,IAAI,EAAE;AACFE,QAAAA,IAAI,EAAE,GADJ;AAEFC,QAAAA,KAAK,EAAE,GAFL;AAGFC,QAAAA,MAAM,EAAE,KAAK;AAHX;AAJG,KAAb;AAUA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKb,QAAL,CAAc;AAACH,MAAAA,MAAM,EAAEZ,OAAO;AAAhB,KAAd;AACH;;AAED0B,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAAA,0BACqBA,KAAK,CAACC,MAD3B;AAAA,UACTC,IADS,iBACTA,IADS;AAAA,UACHC,KADG,iBACHA,KADG;AAAA,UACIC,IADJ,iBACIA,IADJ;AAAA,UACUC,OADV,iBACUA,OADV;AAEhBD,IAAAA,IAAI,KAAK,UAAT,GAAsB,KAAKlB,QAAL,CAAc;AAAE,OAACgB,IAAD,GAAQG;AAAV,KAAd,CAAtB,GAA2D,KAAKnB,QAAL,CAAc;AAAE,OAACgB,IAAD,GAAQC;AAAV,KAAd,CAA3D;AACH;;AAoCDG,EAAAA,MAAM,GAAE;AAAA,yBAC4B,KAAKzB,KADjC;AAAA,UACIW,IADJ,gBACIA,IADJ;AAAA,UACUV,QADV,gBACUA,QADV;AAAA,UACoBW,GADpB,gBACoBA,GADpB;AAGJ,WACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKf,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAK6B,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,KAAK,EAAE;AAACZ,QAAAA,KAAK,EAAE;AAAR,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,GAAG,IACA,oBAAC,SAAD;AACI,MAAA,GAAG,EAAEA,GADT;AAEI,MAAA,IAAI,EAAED,IAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAQKV,QAAQ,IACT;AAAK,MAAA,GAAG,EAAC,MAAT;AAAgB,MAAA,IAAI,EAAC,UAArB;AAAgC,MAAA,EAAE,EAAC,UAAnC;AAA8C,MAAA,GAAG,EAAEA,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADJ,CAFJ,EAgBI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,uBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ,CADJ,CAJJ,CADJ;AA2BH;;AAzFkC;;AA4FvC,eAAeP,QAAf","sourcesContent":["import React from 'react'\nimport { getUser } from \"../../services/auth\"\nimport api from \"../../services/api\"\nimport ReactCrop from \"react-image-crop\"\nimport FormLogoImageCrop from \"./FormLogoImageCrop\"\n\nclass FormLogo extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            logoFile: null,\n            userId: null,\n            src: null,\n            crop: {\n                unit: \"%\",\n                width: 100,\n                aspect: 16 / 7\n            }\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    componentDidMount(){\n        this.setState({userId: getUser()})\n    }\n\n    handleChange(event) {\n        const {name, value, type, checked} = event.target\n        type === \"checkbox\" ? this.setState({ [name]: checked }) : this.setState({ [name]: value })\n    }\n\n    handleSubmit = async e => {\n\n        e.preventDefault();\n        const { logoFile, userId } = this.state\n\n        console.log(this.state)\n\n        if (!logoFile || !userId) {\n            this.setState({ error: \"Suba sua imagem de Logo para salvar\" })\n        } else {\n            try {\n                const response = await api.post(\"/auth//api/users/logo\", { logoFile, userId })\n\n                console.log(response)\n                \n                //login(responseLogin.data.access_token)\n                //this.props.history.push(\"/\")\n\n            } catch (err) {\n                this.setState({\n                error:\n                    \"Houve um problema com o login, verifique suas credenciais. T.T\"\n                })\n            }\n        }\n\n    }\n\n\n    handleOnCrop = () => {\n        this.setState({crop})\n    }\n\n\n    render(){\n        const { crop, logoFile, src } = this.state;\n\n        return (\n            <div className=\"panel\">\n                <div className=\"panel-heading\">\n                    <h3 className=\"panel-title\">Logo</h3>\n                </div>\n                <div className=\"panel-body container-fluid\">\n                    <form onSubmit={this.handleSubmit}>    \n                        <input type=\"file\" onChange={this.onSelectFile} />\n                        <div className=\"row\">\n                            <div className=\"CropComponent\" style={{width: \"100%\"}}>\n                                {src && (\n                                    <ReactCrop\n                                        src={src}\n                                        crop={crop}\n                                    />\n                                )}\n                                <br/>\n                                {logoFile && (\n                                <img alt=\"Crop\" name=\"logoFile\" id=\"logoFile\" src={logoFile} />\n                                )}\n                            </div>\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-success mt-20\">Salvar</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FormLogo"]},"metadata":{},"sourceType":"module"}