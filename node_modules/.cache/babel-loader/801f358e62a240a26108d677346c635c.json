{"ast":null,"code":"var _jsxFileName = \"/Users/massari/Code/gerarme-wapp/src/components/configs/FormLogo.js\";\nimport React from 'react';\nimport FormLogoImageCrop from './FormLogoImageCrop';\n\nclass FormLogo extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n\n      if (!email || !password) {\n        this.setState({\n          error: \"Suba sua imagem de Logo para salvar\"\n        });\n      } else {\n        try {\n          const responseLogin = await api.post(\"/auth/login\", {\n            email,\n            password\n          });\n          login(responseLogin.data.access_token);\n          const responseUser = await api.post(\"/auth/me\", {});\n          user(responseUser.data.id);\n          this.props.history.push(\"/\");\n        } catch (err) {\n          this.setState({\n            error: \"Houve um problema com o login, verifique suas credenciais. T.T\"\n          });\n        }\n      }\n    };\n\n    this.state = {\n      logoImage: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value,\n          type = _event$target.type,\n          checked = _event$target.checked;\n    type === \"checkbox\" ? this.setState({\n      [name]: checked\n    }) : this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"panel-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Logo\")), React.createElement(\"div\", {\n      className: \"panel-body container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      method: \"POST\",\n      action: \"http://my.gerar.me/user/configs_logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(FormLogoImageCrop, {\n      src: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success mt-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Salvar\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.logoImage)));\n  }\n\n}\n\nexport default FormLogo;","map":{"version":3,"sources":["/Users/massari/Code/gerarme-wapp/src/components/configs/FormLogo.js"],"names":["React","FormLogoImageCrop","FormLogo","Component","constructor","handleSubmit","e","preventDefault","state","email","password","setState","error","responseLogin","api","post","login","data","access_token","responseUser","user","id","props","history","push","err","logoImage","handleChange","bind","event","target","name","value","type","checked","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,GAAE;AACT;;AADS,SAabC,YAba,GAaE,MAAMC,CAAN,IAAW;AAEtBA,MAAAA,CAAC,CAACC,cAAF;AAFsB,0BAGM,KAAKC,KAHX;AAAA,YAGdC,KAHc,eAGdA,KAHc;AAAA,YAGPC,QAHO,eAGPA,QAHO;;AAKtB,UAAI,CAACD,KAAD,IAAU,CAACC,QAAf,EAAyB;AACrB,aAAKC,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAd;AACH,OAFD,MAEO;AACH,YAAI;AACA,gBAAMC,aAAa,GAAG,MAAMC,GAAG,CAACC,IAAJ,CAAS,aAAT,EAAwB;AAAEN,YAAAA,KAAF;AAASC,YAAAA;AAAT,WAAxB,CAA5B;AACAM,UAAAA,KAAK,CAACH,aAAa,CAACI,IAAd,CAAmBC,YAApB,CAAL;AAEA,gBAAMC,YAAY,GAAG,MAAML,GAAG,CAACC,IAAJ,CAAS,UAAT,EAAqB,EAArB,CAA3B;AACAK,UAAAA,IAAI,CAACD,YAAY,CAACF,IAAb,CAAkBI,EAAnB,CAAJ;AAEA,eAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,SARD,CAQE,OAAOC,GAAP,EAAY;AACV,eAAKd,QAAL,CAAc;AACdC,YAAAA,KAAK,EACD;AAFU,WAAd;AAIH;AACJ;AAEJ,KArCY;;AAET,SAAKJ,KAAL,GAAa;AACTkB,MAAAA,SAAS,EAAE;AADF,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAAA,0BACqBA,KAAK,CAACC,MAD3B;AAAA,UACTC,IADS,iBACTA,IADS;AAAA,UACHC,KADG,iBACHA,KADG;AAAA,UACIC,IADJ,iBACIA,IADJ;AAAA,UACUC,OADV,iBACUA,OADV;AAEhBD,IAAAA,IAAI,KAAK,UAAT,GAAsB,KAAKtB,QAAL,CAAc;AAAE,OAACoB,IAAD,GAAQG;AAAV,KAAd,CAAtB,GAA2D,KAAKvB,QAAL,CAAc;AAAE,OAACoB,IAAD,GAAQC;AAAV,KAAd,CAA3D;AACH;;AA4BDG,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,MAAM,EAAC,MAAb;AAAoB,MAAA,MAAM,EAAC,sCAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAmB,MAAA,GAAG,EAAC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,uBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAK3B,KAAL,CAAWkB,SAAf,CALJ,CAJJ,CADJ;AAcH;;AAvDkC;;AA0DvC,eAAexB,QAAf","sourcesContent":["import React from 'react'\nimport FormLogoImageCrop from './FormLogoImageCrop'\n\nclass FormLogo extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            logoImage: \"\"\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(event) {\n        const {name, value, type, checked} = event.target\n        type === \"checkbox\" ? this.setState({ [name]: checked }) : this.setState({ [name]: value })\n    }\n\n    handleSubmit = async e => {\n\n        e.preventDefault();\n        const { email, password } = this.state\n\n        if (!email || !password) {\n            this.setState({ error: \"Suba sua imagem de Logo para salvar\" })\n        } else {\n            try {\n                const responseLogin = await api.post(\"/auth/login\", { email, password })\n                login(responseLogin.data.access_token)\n\n                const responseUser = await api.post(\"/auth/me\", { })\n                user(responseUser.data.id)\n\n                this.props.history.push(\"/\")\n            } catch (err) {\n                this.setState({\n                error:\n                    \"Houve um problema com o login, verifique suas credenciais. T.T\"\n                })\n            }\n        }\n\n    }\n\n    render(){\n        return (\n            <div className=\"panel\">\n                <div className=\"panel-heading\">\n                    <h3 className=\"panel-title\">Logo</h3>\n                </div>\n                <div className=\"panel-body container-fluid\">\n                    <form method=\"POST\" action=\"http://my.gerar.me/user/configs_logo\">    \n                        <FormLogoImageCrop src=\"\"/> \n                        <button type=\"submit\" className=\"btn btn-success mt-20\">Salvar</button>\n                    </form>\n                    <p>{this.state.logoImage}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FormLogo"]},"metadata":{},"sourceType":"module"}